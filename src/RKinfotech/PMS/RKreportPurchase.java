/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package RKinfotech.PMS;

import RKinfotech.Class.rkConnection;
import RKinfotech.Class.rkDatabase;
import java.io.File;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JComboBox;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author rk
 */
public class RKreportPurchase extends javax.swing.JInternalFrame {

    /**
     * Creates new form RKreportAnuragDis
     */
    public RKreportPurchase() {
        initComponents();
        db.rkAutoCompleted(new JComboBox[]{rkMonth,rkYear});
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rkMonth = new javax.swing.JComboBox<>();
        rkDisplayReport = new javax.swing.JButton();
        rkYear = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(51, 51, 51));
        setClosable(true);
        setTitle("Purchase Report");

        rkMonth.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        rkMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        rkMonth.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rkMonthMonthItemStateChanged(evt);
            }
        });

        rkDisplayReport.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        rkDisplayReport.setText("Display Report");
        rkDisplayReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rkDisplayReportActionPerformed(evt);
            }
        });

        rkYear.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        rkYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Year", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040", "2041", "2042", "2043", "2044", "2045", "2046", "2047", "2048", "2049", "2050", "2051", "2052", "2053", "2054", "2055", "2056", "2057", "2058", "2059", "2060", "2061", "2062", "2063", "2064", "2065", "2066", "2067", "2068", "2069", "2070", "2071", "2072", "2073", "2074", "2075", "2076", "2077", "2078", "2079", "2080", "2081", "2082", "2083", "2084", "2085", "2086", "2087", "2088", "2089", "2090", "2091", "2092", "2093", "2094", "2095", "2096", "2097", "2098", "2099" }));
        rkYear.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rkMonthMonthItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rkDisplayReport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rkMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(rkYear, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rkMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rkYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rkDisplayReport)
                .addContainerGap(80, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rkDisplayReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rkDisplayReportActionPerformed
        try {
            if (rkMonth.getSelectedIndex() > 0 && rkYear.getSelectedIndex()>0) {
                Map param = new HashMap();
                param.put("rkStartDate",year+"-"+month+"-01");
                param.put("rkEndDate",year+"-"+month+"-31");
                
                String report = new File("").getAbsolutePath() + "\\src\\RKinfotech\\Reports\\RKpurchase.jrxml";
                //String report = new File("").getAbsolutePath() + "/src/RKinfotech/Reports/RKpurchase.jrxml";
                JasperReport jasperReport = JasperCompileManager.compileReport(report);
                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, param, rkConnection.rkConnection());
                JasperViewer.viewReport(jasperPrint, false);
            } else {

            }
        } catch (JRException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_rkDisplayReportActionPerformed

    private void rkMonthMonthItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rkMonthMonthItemStateChanged
        if(rkMonth.getSelectedIndex()>0 && rkYear.getSelectedIndex()>0){
            year = (String) rkYear.getSelectedItem();
            month = (String) rkMonth.getSelectedItem();
        }
    }//GEN-LAST:event_rkMonthMonthItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton rkDisplayReport;
    private javax.swing.JComboBox<String> rkMonth;
    private javax.swing.JComboBox<String> rkYear;
    // End of variables declaration//GEN-END:variables
    rkDatabase db = new rkDatabase();
    private String year,month;
}
